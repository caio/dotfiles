#!/bin/bash
# Author: Caio Romão <caioromao@gmail.com>
# Note: This script is full of bashisms

progname=$(basename $0)
verbose=false
noerror=false

usage() {
    cat 1>&2 <<EOF
usage: ${progname} -u USERNAME -c CELL -m MOUNTPOINT

This script mounts via CIFS (Samba) a GSA Cell user's homedir.

Mandatory Parameters:
  -u USERNAME    The GSA username
  -c CELL        Address to the GSA Cell
  -m MOUNTPOINT  Path where to mount the GSA Cell

Optional Parameters:
  -h             Show this message
  -v             Verbose mode
  -n             Don't exit with error if share already mounted
  -p PASSWORD    Password to the given username
  -o PARAMETERS  Extra options to pass to the mount command
  -u UID         Custom UID to use on mount (Defaults to current user's ID)
  -g GID         Custom GID to use on mount (Defaults to current user's GID)
  -s SHARE       Custom share to be mounted. E.g.: pokgsa/projects/u/upp.
                 You can list shares using: smbclient -L CELL -u USERNAME

Brought to you by: Caio Romão <caioromao@gmail.com>
EOF
}

do_strip() {
    # Strips a given string from a given character (defaults to blank space).
    # E.g.:
    #   do_strip "/////My string/////" "/"
    #   >>> "My String"
    result=$1
    char=$2

    [[ -z $char ]] && char=' '

    # Strip from beginning of string
    while [ "${result:0:1}" = "$char" ]; do
        result=${result:1:${#result}}
    done

    # Strip from end of string
    while [ "${result:$((${#result} - 1)):${#result}}" = "$char" ]; do
        result=${result:0:$((${#result} -1))}
    done

    echo $result
}

check_param() {
    local pname=$1
    if [[ -z $(eval echo \$$pname) ]]; then
        cat 1>&2 <<EOF
Missing ${pname/GSA_/} option. Check "${progname} -h" for usage instructions.
EOF
        exit 1
    fi
}

read_opts() {
    while getopts "hu:c:m:vp:n" opt; do
        case $opt in
            u)
                GSA_USER=$OPTARG;;
            c)
                GSA_CELL=$(do_strip "$OPTARG" "/");;
            m)
                GSA_MOUNTPOINT=$OPTARG;;
            h)
                usage; exit 0;;
            v)
                verbose=true;;
            n)
                noerror=true;;
            p)
                GSA_PASS=$OPTARG;;
            o)
                GSA_MOUNTOPTS=$OPTARGS;;
            u)
                GSA_UID=$OPTARGS;;
            g)
                GSA_GID=$OPTARGS;;
            s)
                GSA_SHARE=$(do_strip "$OPTARG" "/");;
        esac
    done

    for opt in GSA_USER GSA_CELL GSA_MOUNTPOINT; do
        check_param $opt
    done

    if [[ -z $GSA_PASS ]]; then
        read -s -p "GSA Password: " GSA_PASS; echo
    fi

    [[ -z $GSA_UID ]] && GSA_UID=$UID
    [[ -z $GSA_GID ]] && GSA_GID=$(id -g)
    [[ -z $GSA_SHARE ]] && GSA_SHARE=$GSA_USER
}

main() {
    read_opts "$@"

    local target="//$GSA_CELL/$GSA_SHARE"

    # Check if already mounted
    if awk '{ print $1 }' /proc/mounts | grep -x "$target/" &>/dev/null; then
        cat 2>&1 <<EOF
WARNING: Share ${target} already mounted!
EOF
        $noerror && exit 0 || exit 2
    fi

    $verbose && set -x
    sudo mount -t cifs -o username=${GSA_USER},password=${GSA_PASS},\
uid=${GSA_UID},gid=${GSA_GID},setuid,$GSA_MOUNTOPTS "$target" ${GSA_MOUNTPOINT}
    $verbose && set +x || true
}

main "$@"
